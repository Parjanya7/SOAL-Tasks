-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS dev_schema.attendance
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    student_id bigint NOT NULL,
    class_id bigint NOT NULL,
    created_at timestamp with time zone,
    created_by bigint,
    updated_at timestamp with time zone,
    updated_by bigint,
    is_present boolean NOT NULL,
    CONSTRAINT attendance_pkey PRIMARY KEY (id),
    CONSTRAINT unique_attendance UNIQUE (student_id, class_id)
);

CREATE TABLE IF NOT EXISTS dev_schema.classes
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    class_code character varying COLLATE pg_catalog."default" NOT NULL,
    subject_teacher_id bigint NOT NULL,
    slot_id bigint NOT NULL,
    created_at timestamp with time zone,
    created_by bigint,
    updated_at timestamp with time zone,
    updated_by bigint,
    CONSTRAINT classes_pkey PRIMARY KEY (id),
    CONSTRAINT slot_unique UNIQUE (slot_id)
);

CREATE TABLE IF NOT EXISTS dev_schema.roles
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    permissions bigint,
    created_at timestamp with time zone,
    created_by bigint,
    updated_at timestamp with time zone,
    updated_by bigint,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT unique_role UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS dev_schema.slots
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    start_time timestamp with time zone NOT NULL,
    end_time timestamp with time zone NOT NULL,
    day_of_week character varying COLLATE pg_catalog."default" NOT NULL,
    date date,
    created_at timestamp with time zone,
    created_by bigint,
    updated_at timestamp with time zone,
    updated_by bigint,
    CONSTRAINT slots_pkey PRIMARY KEY (id),
    CONSTRAINT unique_slot UNIQUE (start_time, end_time, day_of_week, date)
);

CREATE TABLE IF NOT EXISTS dev_schema.subject_teacher_users
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint NOT NULL,
    subject_id bigint NOT NULL,
    created_at timestamp with time zone,
    created_by bigint,
    updated_at timestamp with time zone,
    updated_by bigint,
    CONSTRAINT teacher_users_pkey PRIMARY KEY (id),
    CONSTRAINT unique_teacher_subject UNIQUE (user_id, subject_id)
);

CREATE TABLE IF NOT EXISTS dev_schema.subjects
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    subject_code character varying COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone,
    created_by bigint,
    updated_at timestamp with time zone,
    updated_by bigint,
    CONSTRAINT subjects_pkey PRIMARY KEY (id),
    CONSTRAINT unique_subject UNIQUE (subject_code)
);

CREATE TABLE IF NOT EXISTS dev_schema.users
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    password character varying COLLATE pg_catalog."default" NOT NULL,
    role_id bigint,
    created_at timestamp with time zone,
    created_by bigint,
    updated_at timestamp with time zone,
    updated_by bigint,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT unique_email UNIQUE (email)
);

ALTER TABLE IF EXISTS dev_schema.attendance
    ADD CONSTRAINT classes_fkey FOREIGN KEY (class_id)
    REFERENCES dev_schema.classes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS dev_schema.attendance
    ADD CONSTRAINT students_fkey FOREIGN KEY (student_id)
    REFERENCES dev_schema.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS dev_schema.classes
    ADD CONSTRAINT slots_fkey FOREIGN KEY (slot_id)
    REFERENCES dev_schema.slots (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS slot_unique
    ON dev_schema.classes(slot_id);


ALTER TABLE IF EXISTS dev_schema.classes
    ADD CONSTRAINT subject_teachers_fkey FOREIGN KEY (subject_teacher_id)
    REFERENCES dev_schema.subject_teacher_users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS dev_schema.subject_teacher_users
    ADD CONSTRAINT subject_fkey FOREIGN KEY (subject_id)
    REFERENCES dev_schema.subjects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS dev_schema.subject_teacher_users
    ADD CONSTRAINT user_fkey FOREIGN KEY (user_id)
    REFERENCES dev_schema.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS dev_schema.users
    ADD CONSTRAINT role_fkey FOREIGN KEY (role_id)
    REFERENCES dev_schema.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;